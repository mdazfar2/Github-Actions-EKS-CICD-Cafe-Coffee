name: Build,Analyze,scan

on:
  push:
    branches:
      - master


jobs:
  build-analyze-scan:
    name: Build
    runs-on: [azfar]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - name: npm install dependencies
        run: npm install 
      - name: Trivy File Scan
        run: |
          # Scanning files
          trivy fs . > trivyfs.txt
      - name: Docker build and push
        run: |
          # Run commands to build and push Docker imagess
          docker build -t cafe-coffee .
          docker tag cafe-coffee azfaralam440/cafe-coffee:latest
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker push azfaralam440/cafe-coffee:latest
        env:
          DOCKER_CLI_ACI: 1
      - name: Image scan
        run: trivy image azfaralam440/cafe-coffee:latest > trivyimage.txt

  deploy:
   needs: build-analyze-scan   
   runs-on: [self-hosted]
   steps:
      - name: docker pull image
        run: docker pull azfaralam440/cafe-coffee:latest

      - name: Image scan
        run: trivy image azfaralam440/cafe-coffee:latest > trivyimagedeploy.txt  
  
      - name: Deploy to container
        run: docker run -d --name game -p 5173:5173 azfaralam440/cafe-coffee:latest

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name EKS_CLOUD

      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml
  
      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubactions-eks'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  
